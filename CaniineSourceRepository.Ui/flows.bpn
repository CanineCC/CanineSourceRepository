[{"Id":"01923038-1305-7d35-ba8b-68fc6026a5cc","Name":"Test diagram","Objective":"","FlowOverview":"","Version":1,"Timestamp":"2024-09-26T21:23:54.2464569+00:00","User":"me","Tasks":[{"Type":"ApiInputBlock","AccessScopes":["Anonymous"],"Id":"01923038-12fa-78dc-a640-19128c4e4f63","Name":"Create user endpoint","BusinessPurpose":"","BehavioralGoal":"","Input":"Api","ServiceDependency":"NoService","NamedConfiguration":"","RecordTypes":[{"Name":"Api","Fields":[{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]}],"ValidDatatypes":["Api","string","bool","long","decimal","DateTimeOffset","DateOnly","TimeOnly","Guid","byte[]"]},{"Type":"CodeBlock","Output":"Output","Code":"\r\n    var userId = Guid.CreateVersion7();\r\n    //TODO: Add the user to the user database\r\n    return new Output(userId, input.Name/*, input.Accessscope*/);\r\n    ","TestCases":{},"RecordsAsCode":"public record Output (Guid Id,string Name);\r\npublic record Input (string Name);","MethodSignatureAsCode":"public static async Task\u003COutput\u003E Execute(Input input, NoService service) ","Id":"01923038-1303-7253-9ca0-937235dd4fa9","Name":"Create user logic","BusinessPurpose":"Validate that the user has a verified email address before allowing access to premium content.","BehavioralGoal":"Ensure the email is verified and allow access to content.","Input":"Input","ServiceDependency":"NoService","NamedConfiguration":"","RecordTypes":[{"Name":"Output","Fields":[{"Name":"Id","Type":"Guid","IsCollection":false,"IsMandatory":true},{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]},{"Name":"Input","Fields":[{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]}],"ValidDatatypes":["Output","Input","string","bool","long","decimal","DateTimeOffset","DateOnly","TimeOnly","Guid","byte[]"]},{"Type":"CodeBlock","Code":"\r\n    Console.WriteLine(input.Id.ToString() \u002B input.Name);\r\n    ","TestCases":{},"RecordsAsCode":"public record Input (Guid Id,string Name);","MethodSignatureAsCode":"public static async Task Execute(Input input, NoService service)","Id":"01923038-1304-7177-9783-f9d1657c4c9c","Name":"Log user","BusinessPurpose":"Validate that the user has a verified email address before allowing access to premium content.","BehavioralGoal":"Ensure the email is verified and allow access to content.","Input":"Input","ServiceDependency":"NoService","NamedConfiguration":"","RecordTypes":[{"Name":"Input","Fields":[{"Name":"Id","Type":"Guid","IsCollection":false,"IsMandatory":true},{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]}],"ValidDatatypes":["Input","string","bool","long","decimal","DateTimeOffset","DateOnly","TimeOnly","Guid","byte[]"]}],"Transitions":[{"FromBPN":"01923038-12fa-78dc-a640-19128c4e4f63","ToBPN":"01923038-1303-7253-9ca0-937235dd4fa9","Name":"Call Accepted","ConditionExpression":"input.Name != string.Empty","Mappings":[{"From":"input.Name","To":"Name"}]},{"FromBPN":"01923038-1303-7253-9ca0-937235dd4fa9","ToBPN":"01923038-1304-7177-9783-f9d1657c4c9c","Name":"Log info","ConditionExpression":"true","Mappings":[{"From":"output.Name","To":"Name"},{"From":"output.Id","To":"Id"}]}],"TargetEnvironments":["Development","Testing"]},{"Id":"01923038-1305-7d35-ba8b-68fc6026a5cc","Name":"Test diagram","Objective":"","FlowOverview":"","Version":2,"Timestamp":"2024-09-26T21:23:54.2473924+00:00","User":"System","Tasks":[{"Type":"ApiInputBlock","AccessScopes":["Anonymous"],"Id":"01923038-12fa-78dc-a640-19128c4e4f63","Name":"Create user endpoint","BusinessPurpose":"","BehavioralGoal":"","Input":"Api","ServiceDependency":"NoService","NamedConfiguration":"","RecordTypes":[{"Name":"Api","Fields":[{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]}],"ValidDatatypes":["Api","string","bool","long","decimal","DateTimeOffset","DateOnly","TimeOnly","Guid","byte[]"]},{"Type":"CodeBlock","Output":"Output","Code":"\r\n    var userId = Guid.CreateVersion7();\r\n    //TODO: Add the user to the user database\r\n    return new Output(userId, input.Name/*, input.Accessscope*/);\r\n    ","TestCases":{},"RecordsAsCode":"public record Output (Guid Id,string Name);\r\npublic record Input (string Name);","MethodSignatureAsCode":"public static async Task\u003COutput\u003E Execute(Input input, NoService service) ","Id":"01923038-1303-7253-9ca0-937235dd4fa9","Name":"Create user logic","BusinessPurpose":"Validate that the user has a verified email address before allowing access to premium content.","BehavioralGoal":"Ensure the email is verified and allow access to content.","Input":"Input","ServiceDependency":"NoService","NamedConfiguration":"","RecordTypes":[{"Name":"Output","Fields":[{"Name":"Id","Type":"Guid","IsCollection":false,"IsMandatory":true},{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]},{"Name":"Input","Fields":[{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]}],"ValidDatatypes":["Output","Input","string","bool","long","decimal","DateTimeOffset","DateOnly","TimeOnly","Guid","byte[]"]},{"Type":"CodeBlock","Code":"\r\n    Console.WriteLine(input.Id.ToString() \u002B input.Name);\r\n    ","TestCases":{},"RecordsAsCode":"public record Input (Guid Id,string Name);","MethodSignatureAsCode":"public static async Task Execute(Input input, NoService service)","Id":"01923038-1304-7177-9783-f9d1657c4c9c","Name":"Log user","BusinessPurpose":"Validate that the user has a verified email address before allowing access to premium content.","BehavioralGoal":"Ensure the email is verified and allow access to content.","Input":"Input","ServiceDependency":"NoService","NamedConfiguration":"","RecordTypes":[{"Name":"Input","Fields":[{"Name":"Id","Type":"Guid","IsCollection":false,"IsMandatory":true},{"Name":"Name","Type":"string","IsCollection":false,"IsMandatory":true}]}],"ValidDatatypes":["Input","string","bool","long","decimal","DateTimeOffset","DateOnly","TimeOnly","Guid","byte[]"]}],"Transitions":[{"FromBPN":"01923038-12fa-78dc-a640-19128c4e4f63","ToBPN":"01923038-1303-7253-9ca0-937235dd4fa9","Name":"Call Accepted","ConditionExpression":"input.Name != string.Empty","Mappings":[{"From":"input.Name","To":"Name"}]},{"FromBPN":"01923038-1303-7253-9ca0-937235dd4fa9","ToBPN":"01923038-1304-7177-9783-f9d1657c4c9c","Name":"Log info","ConditionExpression":"true","Mappings":[{"From":"output.Name","To":"Name"},{"From":"output.Id","To":"Id"}]}],"TargetEnvironments":["Development","Testing"]}]