/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CodeTask } from './CodeTask';
import {
    CodeTaskFromJSON,
    CodeTaskFromJSONTyped,
    CodeTaskToJSON,
} from './CodeTask';

/**
 * 
 * @export
 * @interface AddCodeTaskToDraftFeatureBody
 */
export interface AddCodeTaskToDraftFeatureBody {
    /**
     * 
     * @type {string}
     * @memberof AddCodeTaskToDraftFeatureBody
     */
    featureId: string;
    /**
     * 
     * @type {CodeTask}
     * @memberof AddCodeTaskToDraftFeatureBody
     */
    task: CodeTask;
}

/**
 * Check if a given object implements the AddCodeTaskToDraftFeatureBody interface.
 */
export function instanceOfAddCodeTaskToDraftFeatureBody(value: object): value is AddCodeTaskToDraftFeatureBody {
    if (!('featureId' in value) || value['featureId'] === undefined) return false;
    if (!('task' in value) || value['task'] === undefined) return false;
    return true;
}

export function AddCodeTaskToDraftFeatureBodyFromJSON(json: any): AddCodeTaskToDraftFeatureBody {
    return AddCodeTaskToDraftFeatureBodyFromJSONTyped(json, false);
}

export function AddCodeTaskToDraftFeatureBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddCodeTaskToDraftFeatureBody {
    if (json == null) {
        return json;
    }
    return {
        
        'featureId': json['featureId'],
        'task': CodeTaskFromJSON(json['task']),
    };
}

export function AddCodeTaskToDraftFeatureBodyToJSON(value?: AddCodeTaskToDraftFeatureBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'featureId': value['featureId'],
        'task': CodeTaskToJSON(value['task']),
    };
}

