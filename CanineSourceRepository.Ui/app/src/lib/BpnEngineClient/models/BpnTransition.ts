/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MapField } from './MapField';
import {
    MapFieldFromJSON,
    MapFieldFromJSONTyped,
    MapFieldToJSON,
} from './MapField';

/**
 * 
 * @export
 * @interface BpnTransition
 */
export interface BpnTransition {
    /**
     * 
     * @type {string}
     * @memberof BpnTransition
     */
    fromBPN?: string;
    /**
     * 
     * @type {string}
     * @memberof BpnTransition
     */
    toBPN?: string;
    /**
     * 
     * @type {string}
     * @memberof BpnTransition
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BpnTransition
     */
    conditionExpression?: string;
    /**
     * 
     * @type {Array<MapField>}
     * @memberof BpnTransition
     */
    mappings?: Array<MapField>;
}

/**
 * Check if a given object implements the BpnTransition interface.
 */
export function instanceOfBpnTransition(value: object): value is BpnTransition {
    return true;
}

export function BpnTransitionFromJSON(json: any): BpnTransition {
    return BpnTransitionFromJSONTyped(json, false);
}

export function BpnTransitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BpnTransition {
    if (json == null) {
        return json;
    }
    return {
        
        'fromBPN': json['fromBPN'] == null ? undefined : json['fromBPN'],
        'toBPN': json['toBPN'] == null ? undefined : json['toBPN'],
        'name': json['name'] == null ? undefined : json['name'],
        'conditionExpression': json['conditionExpression'] == null ? undefined : json['conditionExpression'],
        'mappings': json['mappings'] == null ? undefined : ((json['mappings'] as Array<any>).map(MapFieldFromJSON)),
    };
}

export function BpnTransitionToJSON(value?: BpnTransition | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'fromBPN': value['fromBPN'],
        'toBPN': value['toBPN'],
        'name': value['name'],
        'conditionExpression': value['conditionExpression'],
        'mappings': value['mappings'] == null ? undefined : ((value['mappings'] as Array<any>).map(MapFieldToJSON)),
    };
}

