/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Task2 } from './Task2';
import {
    Task2FromJSON,
    Task2FromJSONTyped,
    Task2ToJSON,
} from './Task2';
import type { Persona } from './Persona';
import {
    PersonaFromJSON,
    PersonaFromJSONTyped,
    PersonaToJSON,
} from './Persona';

/**
 * 
 * @export
 * @interface ContainerDetails
 */
export interface ContainerDetails {
    /**
     * 
     * @type {string}
     * @memberof ContainerDetails
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerDetails
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ContainerDetails
     */
    description: string;
    /**
     * 
     * @type {Array<Persona>}
     * @memberof ContainerDetails
     */
    personas: Array<Persona>;
    /**
     * 
     * @type {Array<Task2>}
     * @memberof ContainerDetails
     */
    tasksWithService: Array<Task2>;
}

/**
 * Check if a given object implements the ContainerDetails interface.
 */
export function instanceOfContainerDetails(value: object): value is ContainerDetails {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('personas' in value) || value['personas'] === undefined) return false;
    if (!('tasksWithService' in value) || value['tasksWithService'] === undefined) return false;
    return true;
}

export function ContainerDetailsFromJSON(json: any): ContainerDetails {
    return ContainerDetailsFromJSONTyped(json, false);
}

export function ContainerDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContainerDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'personas': ((json['personas'] as Array<any>).map(PersonaFromJSON)),
        'tasksWithService': ((json['tasksWithService'] as Array<any>).map(Task2FromJSON)),
    };
}

export function ContainerDetailsToJSON(value?: ContainerDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'personas': ((value['personas'] as Array<any>).map(PersonaToJSON)),
        'tasksWithService': ((value['tasksWithService'] as Array<any>).map(Task2ToJSON)),
    };
}

