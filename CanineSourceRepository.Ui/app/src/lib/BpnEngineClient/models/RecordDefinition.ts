/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataDefinition } from './DataDefinition';
import {
    DataDefinitionFromJSON,
    DataDefinitionFromJSONTyped,
    DataDefinitionToJSON,
} from './DataDefinition';

/**
 * 
 * @export
 * @interface RecordDefinition
 */
export interface RecordDefinition {
    /**
     * 
     * @type {string}
     * @memberof RecordDefinition
     */
    name: string;
    /**
     * 
     * @type {Array<DataDefinition>}
     * @memberof RecordDefinition
     */
    fields: Array<DataDefinition>;
}

/**
 * Check if a given object implements the RecordDefinition interface.
 */
export function instanceOfRecordDefinition(value: object): value is RecordDefinition {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('fields' in value) || value['fields'] === undefined) return false;
    return true;
}

export function RecordDefinitionFromJSON(json: any): RecordDefinition {
    return RecordDefinitionFromJSONTyped(json, false);
}

export function RecordDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'fields': ((json['fields'] as Array<any>).map(DataDefinitionFromJSON)),
    };
}

export function RecordDefinitionToJSON(value?: RecordDefinition | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'fields': ((value['fields'] as Array<any>).map(DataDefinitionToJSON)),
    };
}

