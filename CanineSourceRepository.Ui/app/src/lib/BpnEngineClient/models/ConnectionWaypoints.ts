/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Position } from './Position';
import {
    PositionFromJSON,
    PositionFromJSONTyped,
    PositionToJSON,
} from './Position';

/**
 * 
 * @export
 * @interface ConnectionWaypoints
 */
export interface ConnectionWaypoints {
    /**
     * 
     * @type {string}
     * @memberof ConnectionWaypoints
     */
    fromBPN: string;
    /**
     * 
     * @type {string}
     * @memberof ConnectionWaypoints
     */
    toBPN: string;
    /**
     * 
     * @type {Array<Position>}
     * @memberof ConnectionWaypoints
     */
    waypoints: Array<Position>;
}

/**
 * Check if a given object implements the ConnectionWaypoints interface.
 */
export function instanceOfConnectionWaypoints(value: object): value is ConnectionWaypoints {
    if (!('fromBPN' in value) || value['fromBPN'] === undefined) return false;
    if (!('toBPN' in value) || value['toBPN'] === undefined) return false;
    if (!('waypoints' in value) || value['waypoints'] === undefined) return false;
    return true;
}

export function ConnectionWaypointsFromJSON(json: any): ConnectionWaypoints {
    return ConnectionWaypointsFromJSONTyped(json, false);
}

export function ConnectionWaypointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionWaypoints {
    if (json == null) {
        return json;
    }
    return {
        
        'fromBPN': json['fromBPN'],
        'toBPN': json['toBPN'],
        'waypoints': ((json['waypoints'] as Array<any>).map(PositionFromJSON)),
    };
}

export function ConnectionWaypointsToJSON(value?: ConnectionWaypoints | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'fromBPN': value['fromBPN'],
        'toBPN': value['toBPN'],
        'waypoints': ((value['waypoints'] as Array<any>).map(PositionToJSON)),
    };
}

