/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Stats
 */
export interface Stats {
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    invocationCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    invocationErrorCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    invocationCompletedCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    invocationsInProgressCount: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    totalDurationMs: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    maxDurationMs: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    avgDurationMs: number;
    /**
     * 
     * @type {number}
     * @memberof Stats
     */
    minDurationMs: number;
    /**
     * 
     * @type {Date}
     * @memberof Stats
     */
    lastUsed?: Date | null;
}

/**
 * Check if a given object implements the Stats interface.
 */
export function instanceOfStats(value: object): value is Stats {
    if (!('invocationCount' in value) || value['invocationCount'] === undefined) return false;
    if (!('invocationErrorCount' in value) || value['invocationErrorCount'] === undefined) return false;
    if (!('invocationCompletedCount' in value) || value['invocationCompletedCount'] === undefined) return false;
    if (!('invocationsInProgressCount' in value) || value['invocationsInProgressCount'] === undefined) return false;
    if (!('totalDurationMs' in value) || value['totalDurationMs'] === undefined) return false;
    if (!('maxDurationMs' in value) || value['maxDurationMs'] === undefined) return false;
    if (!('avgDurationMs' in value) || value['avgDurationMs'] === undefined) return false;
    if (!('minDurationMs' in value) || value['minDurationMs'] === undefined) return false;
    return true;
}

export function StatsFromJSON(json: any): Stats {
    return StatsFromJSONTyped(json, false);
}

export function StatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stats {
    if (json == null) {
        return json;
    }
    return {
        
        'invocationCount': json['invocationCount'],
        'invocationErrorCount': json['invocationErrorCount'],
        'invocationCompletedCount': json['invocationCompletedCount'],
        'invocationsInProgressCount': json['invocationsInProgressCount'],
        'totalDurationMs': json['totalDurationMs'],
        'maxDurationMs': json['maxDurationMs'],
        'avgDurationMs': json['avgDurationMs'],
        'minDurationMs': json['minDurationMs'],
        'lastUsed': json['lastUsed'] == null ? undefined : (new Date(json['lastUsed'])),
    };
}

export function StatsToJSON(value?: Stats | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'invocationCount': value['invocationCount'],
        'invocationErrorCount': value['invocationErrorCount'],
        'invocationCompletedCount': value['invocationCompletedCount'],
        'invocationsInProgressCount': value['invocationsInProgressCount'],
        'totalDurationMs': value['totalDurationMs'],
        'maxDurationMs': value['maxDurationMs'],
        'avgDurationMs': value['avgDurationMs'],
        'minDurationMs': value['minDurationMs'],
        'lastUsed': value['lastUsed'] == null ? undefined : ((value['lastUsed'] as any).toISOString()),
    };
}

