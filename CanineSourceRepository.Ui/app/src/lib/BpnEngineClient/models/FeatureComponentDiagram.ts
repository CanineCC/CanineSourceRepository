/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BpnPosition } from './BpnPosition';
import {
    BpnPositionFromJSON,
    BpnPositionFromJSONTyped,
    BpnPositionToJSON,
} from './BpnPosition';
import type { ConnectionWaypoints } from './ConnectionWaypoints';
import {
    ConnectionWaypointsFromJSON,
    ConnectionWaypointsFromJSONTyped,
    ConnectionWaypointsToJSON,
} from './ConnectionWaypoints';

/**
 * 
 * @export
 * @interface FeatureComponentDiagram
 */
export interface FeatureComponentDiagram {
    /**
     * 
     * @type {Array<BpnPosition>}
     * @memberof FeatureComponentDiagram
     */
    bpnPositions?: Array<BpnPosition>;
    /**
     * 
     * @type {Array<ConnectionWaypoints>}
     * @memberof FeatureComponentDiagram
     */
    bpnConnectionWaypoints?: Array<ConnectionWaypoints>;
}

/**
 * Check if a given object implements the FeatureComponentDiagram interface.
 */
export function instanceOfFeatureComponentDiagram(value: object): value is FeatureComponentDiagram {
    return true;
}

export function FeatureComponentDiagramFromJSON(json: any): FeatureComponentDiagram {
    return FeatureComponentDiagramFromJSONTyped(json, false);
}

export function FeatureComponentDiagramFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureComponentDiagram {
    if (json == null) {
        return json;
    }
    return {
        
        'bpnPositions': json['bpnPositions'] == null ? undefined : ((json['bpnPositions'] as Array<any>).map(BpnPositionFromJSON)),
        'bpnConnectionWaypoints': json['bpnConnectionWaypoints'] == null ? undefined : ((json['bpnConnectionWaypoints'] as Array<any>).map(ConnectionWaypointsFromJSON)),
    };
}

export function FeatureComponentDiagramToJSON(value?: FeatureComponentDiagram | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'bpnPositions': value['bpnPositions'] == null ? undefined : ((value['bpnPositions'] as Array<any>).map(BpnPositionToJSON)),
        'bpnConnectionWaypoints': value['bpnConnectionWaypoints'] == null ? undefined : ((value['bpnConnectionWaypoints'] as Array<any>).map(ConnectionWaypointsToJSON)),
    };
}

