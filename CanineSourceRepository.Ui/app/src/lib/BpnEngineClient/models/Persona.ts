/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Persona
 */
export interface Persona {
    /**
     * 
     * @type {string}
     * @memberof Persona
     */
    id: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Persona
     */
    components: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Persona
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Persona
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Persona
     */
    relationToContainer: string;
}

/**
 * Check if a given object implements the Persona interface.
 */
export function instanceOfPersona(value: object): value is Persona {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('components' in value) || value['components'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('relationToContainer' in value) || value['relationToContainer'] === undefined) return false;
    return true;
}

export function PersonaFromJSON(json: any): Persona {
    return PersonaFromJSONTyped(json, false);
}

export function PersonaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Persona {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'components': json['components'],
        'name': json['name'],
        'description': json['description'],
        'relationToContainer': json['relationToContainer'],
    };
}

export function PersonaToJSON(value?: Persona | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'components': value['components'],
        'name': value['name'],
        'description': value['description'],
        'relationToContainer': value['relationToContainer'],
    };
}

