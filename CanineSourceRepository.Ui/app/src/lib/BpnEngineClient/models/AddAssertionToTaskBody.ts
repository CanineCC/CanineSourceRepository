/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssertDefinition } from './AssertDefinition';
import {
    AssertDefinitionFromJSON,
    AssertDefinitionFromJSONTyped,
    AssertDefinitionToJSON,
} from './AssertDefinition';

/**
 * 
 * @export
 * @interface AddAssertionToTaskBody
 */
export interface AddAssertionToTaskBody {
    /**
     * 
     * @type {string}
     * @memberof AddAssertionToTaskBody
     */
    featureId: string;
    /**
     * 
     * @type {string}
     * @memberof AddAssertionToTaskBody
     */
    taskId: string;
    /**
     * 
     * @type {string}
     * @memberof AddAssertionToTaskBody
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AddAssertionToTaskBody
     */
    input: string;
    /**
     * 
     * @type {Array<AssertDefinition>}
     * @memberof AddAssertionToTaskBody
     */
    asserts: Array<AssertDefinition>;
}

/**
 * Check if a given object implements the AddAssertionToTaskBody interface.
 */
export function instanceOfAddAssertionToTaskBody(value: object): value is AddAssertionToTaskBody {
    if (!('featureId' in value) || value['featureId'] === undefined) return false;
    if (!('taskId' in value) || value['taskId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('input' in value) || value['input'] === undefined) return false;
    if (!('asserts' in value) || value['asserts'] === undefined) return false;
    return true;
}

export function AddAssertionToTaskBodyFromJSON(json: any): AddAssertionToTaskBody {
    return AddAssertionToTaskBodyFromJSONTyped(json, false);
}

export function AddAssertionToTaskBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddAssertionToTaskBody {
    if (json == null) {
        return json;
    }
    return {
        
        'featureId': json['featureId'],
        'taskId': json['taskId'],
        'name': json['name'],
        'input': json['input'],
        'asserts': ((json['asserts'] as Array<any>).map(AssertDefinitionFromJSON)),
    };
}

export function AddAssertionToTaskBodyToJSON(value?: AddAssertionToTaskBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'featureId': value['featureId'],
        'taskId': value['taskId'],
        'name': value['name'],
        'input': value['input'],
        'asserts': ((value['asserts'] as Array<any>).map(AssertDefinitionToJSON)),
    };
}

