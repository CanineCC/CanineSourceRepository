/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Scope } from './Scope';
import {
    ScopeFromJSON,
    ScopeFromJSONTyped,
    ScopeToJSON,
} from './Scope';

/**
 * 
 * @export
 * @interface UpdatePersonaInformationBody
 */
export interface UpdatePersonaInformationBody {
    /**
     * 
     * @type {string}
     * @memberof UpdatePersonaInformationBody
     */
    personaId: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePersonaInformationBody
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePersonaInformationBody
     */
    description: string;
    /**
     * 
     * @type {Scope}
     * @memberof UpdatePersonaInformationBody
     */
    scope: Scope;
}



/**
 * Check if a given object implements the UpdatePersonaInformationBody interface.
 */
export function instanceOfUpdatePersonaInformationBody(value: object): value is UpdatePersonaInformationBody {
    if (!('personaId' in value) || value['personaId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('scope' in value) || value['scope'] === undefined) return false;
    return true;
}

export function UpdatePersonaInformationBodyFromJSON(json: any): UpdatePersonaInformationBody {
    return UpdatePersonaInformationBodyFromJSONTyped(json, false);
}

export function UpdatePersonaInformationBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePersonaInformationBody {
    if (json == null) {
        return json;
    }
    return {
        
        'personaId': json['personaId'],
        'name': json['name'],
        'description': json['description'],
        'scope': ScopeFromJSON(json['scope']),
    };
}

export function UpdatePersonaInformationBodyToJSON(value?: UpdatePersonaInformationBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'personaId': value['personaId'],
        'name': value['name'],
        'description': value['description'],
        'scope': ScopeToJSON(value['scope']),
    };
}

