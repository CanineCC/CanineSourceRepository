/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ServerHealth
 */
export interface ServerHealth {
    /**
     * 
     * @type {boolean}
     * @memberof ServerHealth
     */
    isHealthy: boolean;
    /**
     * 
     * @type {string}
     * @memberof ServerHealth
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof ServerHealth
     */
    serverStartedTime: Date;
    /**
     * 
     * @type {number}
     * @memberof ServerHealth
     */
    serverMemoryUsageInMegaBytes: number;
}

/**
 * Check if a given object implements the ServerHealth interface.
 */
export function instanceOfServerHealth(value: object): value is ServerHealth {
    if (!('isHealthy' in value) || value['isHealthy'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('serverStartedTime' in value) || value['serverStartedTime'] === undefined) return false;
    if (!('serverMemoryUsageInMegaBytes' in value) || value['serverMemoryUsageInMegaBytes'] === undefined) return false;
    return true;
}

export function ServerHealthFromJSON(json: any): ServerHealth {
    return ServerHealthFromJSONTyped(json, false);
}

export function ServerHealthFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerHealth {
    if (json == null) {
        return json;
    }
    return {
        
        'isHealthy': json['isHealthy'],
        'message': json['message'],
        'serverStartedTime': (new Date(json['serverStartedTime'])),
        'serverMemoryUsageInMegaBytes': json['serverMemoryUsageInMegaBytes'],
    };
}

export function ServerHealthToJSON(value?: ServerHealth | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'isHealthy': value['isHealthy'],
        'message': value['message'],
        'serverStartedTime': ((value['serverStartedTime']).toISOString()),
        'serverMemoryUsageInMegaBytes': value['serverMemoryUsageInMegaBytes'],
    };
}

