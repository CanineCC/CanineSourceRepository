/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Scope } from './Scope';
import {
    ScopeFromJSON,
    ScopeFromJSONTyped,
    ScopeToJSON,
} from './Scope';

/**
 * 
 * @export
 * @interface AddNamedConfigurationBody
 */
export interface AddNamedConfigurationBody {
    /**
     * 
     * @type {string}
     * @memberof AddNamedConfigurationBody
     */
    systemId: string;
    /**
     * 
     * @type {string}
     * @memberof AddNamedConfigurationBody
     */
    serviceTypeId: string;
    /**
     * 
     * @type {string}
     * @memberof AddNamedConfigurationBody
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AddNamedConfigurationBody
     */
    description: string;
    /**
     * 
     * @type {Scope}
     * @memberof AddNamedConfigurationBody
     */
    scope: Scope;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AddNamedConfigurationBody
     */
    _configuration: { [key: string]: string; };
}



/**
 * Check if a given object implements the AddNamedConfigurationBody interface.
 */
export function instanceOfAddNamedConfigurationBody(value: object): value is AddNamedConfigurationBody {
    if (!('systemId' in value) || value['systemId'] === undefined) return false;
    if (!('serviceTypeId' in value) || value['serviceTypeId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('scope' in value) || value['scope'] === undefined) return false;
    if (!('_configuration' in value) || value['_configuration'] === undefined) return false;
    return true;
}

export function AddNamedConfigurationBodyFromJSON(json: any): AddNamedConfigurationBody {
    return AddNamedConfigurationBodyFromJSONTyped(json, false);
}

export function AddNamedConfigurationBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddNamedConfigurationBody {
    if (json == null) {
        return json;
    }
    return {
        
        'systemId': json['systemId'],
        'serviceTypeId': json['serviceTypeId'],
        'name': json['name'],
        'description': json['description'],
        'scope': ScopeFromJSON(json['scope']),
        '_configuration': json['configuration'],
    };
}

export function AddNamedConfigurationBodyToJSON(value?: AddNamedConfigurationBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'systemId': value['systemId'],
        'serviceTypeId': value['serviceTypeId'],
        'name': value['name'],
        'description': value['description'],
        'scope': ScopeToJSON(value['scope']),
        'configuration': value['_configuration'],
    };
}

