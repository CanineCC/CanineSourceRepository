/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Persona2 } from './Persona2';
import {
    Persona2FromJSON,
    Persona2FromJSONTyped,
    Persona2ToJSON,
} from './Persona2';
import type { FeatureDetails } from './FeatureDetails';
import {
    FeatureDetailsFromJSON,
    FeatureDetailsFromJSONTyped,
    FeatureDetailsToJSON,
} from './FeatureDetails';

/**
 * 
 * @export
 * @interface BpnWebApiContainer
 */
export interface BpnWebApiContainer {
    /**
     * 
     * @type {Array<Persona2>}
     * @memberof BpnWebApiContainer
     */
    personas: Array<Persona2>;
    /**
     * 
     * @type {string}
     * @memberof BpnWebApiContainer
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof BpnWebApiContainer
     */
    systemId: string;
    /**
     * 
     * @type {string}
     * @memberof BpnWebApiContainer
     */
    systemName: string;
    /**
     * 
     * @type {string}
     * @memberof BpnWebApiContainer
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof BpnWebApiContainer
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof BpnWebApiContainer
     */
    allowAnonymous: boolean;
    /**
     * 
     * @type {string}
     * @memberof BpnWebApiContainer
     */
    c4ComponentDiagramSvg: string;
    /**
     * 
     * @type {Date}
     * @memberof BpnWebApiContainer
     */
    lastUpdatedTimestamp: Date;
    /**
     * 
     * @type {Date}
     * @memberof BpnWebApiContainer
     */
    createdTimestamp: Date;
    /**
     * 
     * @type {Array<FeatureDetails>}
     * @memberof BpnWebApiContainer
     */
    features: Array<FeatureDetails>;
}

/**
 * Check if a given object implements the BpnWebApiContainer interface.
 */
export function instanceOfBpnWebApiContainer(value: object): value is BpnWebApiContainer {
    if (!('personas' in value) || value['personas'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('systemId' in value) || value['systemId'] === undefined) return false;
    if (!('systemName' in value) || value['systemName'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('allowAnonymous' in value) || value['allowAnonymous'] === undefined) return false;
    if (!('c4ComponentDiagramSvg' in value) || value['c4ComponentDiagramSvg'] === undefined) return false;
    if (!('lastUpdatedTimestamp' in value) || value['lastUpdatedTimestamp'] === undefined) return false;
    if (!('createdTimestamp' in value) || value['createdTimestamp'] === undefined) return false;
    if (!('features' in value) || value['features'] === undefined) return false;
    return true;
}

export function BpnWebApiContainerFromJSON(json: any): BpnWebApiContainer {
    return BpnWebApiContainerFromJSONTyped(json, false);
}

export function BpnWebApiContainerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BpnWebApiContainer {
    if (json == null) {
        return json;
    }
    return {
        
        'personas': ((json['personas'] as Array<any>).map(Persona2FromJSON)),
        'id': json['id'],
        'systemId': json['systemId'],
        'systemName': json['systemName'],
        'name': json['name'],
        'description': json['description'],
        'allowAnonymous': json['allowAnonymous'],
        'c4ComponentDiagramSvg': json['c4ComponentDiagramSvg'],
        'lastUpdatedTimestamp': (new Date(json['lastUpdatedTimestamp'])),
        'createdTimestamp': (new Date(json['createdTimestamp'])),
        'features': ((json['features'] as Array<any>).map(FeatureDetailsFromJSON)),
    };
}

export function BpnWebApiContainerToJSON(value?: BpnWebApiContainer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'personas': ((value['personas'] as Array<any>).map(Persona2ToJSON)),
        'id': value['id'],
        'systemId': value['systemId'],
        'systemName': value['systemName'],
        'name': value['name'],
        'description': value['description'],
        'allowAnonymous': value['allowAnonymous'],
        'c4ComponentDiagramSvg': value['c4ComponentDiagramSvg'],
        'lastUpdatedTimestamp': ((value['lastUpdatedTimestamp']).toISOString()),
        'createdTimestamp': ((value['createdTimestamp']).toISOString()),
        'features': ((value['features'] as Array<any>).map(FeatureDetailsToJSON)),
    };
}

