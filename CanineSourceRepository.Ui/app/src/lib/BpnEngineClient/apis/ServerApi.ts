/* tslint:disable */
/* eslint-disable */
/**
 * BpnEngine API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DurationClassification,
  ServerHealth,
} from '../models/index';
import {
    DurationClassificationFromJSON,
    DurationClassificationToJSON,
    ServerHealthFromJSON,
    ServerHealthToJSON,
} from '../models/index';

/**
 * 
 */
export class ServerApi extends runtime.BaseAPI {

    /**
     */
    async getDurationClassificationRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DurationClassification>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/BpnEngine/v1/Server/DurationClassification`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DurationClassificationFromJSON));
    }

    /**
     */
    async getDurationClassification(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DurationClassification>> {
        const response = await this.getDurationClassificationRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async restartServerRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/BpnEngine/v1/RestartServer`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async restartServer(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.restartServerRaw(initOverrides);
    }

    /**
     */
    async serverHealthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServerHealth>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/BpnEngine/v1/Health`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ServerHealthFromJSON(jsonValue));
    }

    /**
     */
    async serverHealth(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServerHealth> {
        const response = await this.serverHealthRaw(initOverrides);
        return await response.value();
    }

}
